%{
	#include<stdio.h>
	#include "y.tab.h>
	extern int yylval;
%}
%%
[0-9]+ {yylval=atoi(yytext);return NUM;}
[\t] ;
\n return 0;
. return yytext[0];
%%
int yywrap()
{
	retutn 1;
}
YACC PART
%{
	#include<stdio.h>
	#include<stdlib.h>
	int yylex(void);
	int yyerror(char*S);
%}
%token NUM
%left '+' '-'
%left '*' '/'
%left '(' ')'
%%
expr:e {printf("Result:%d\n",$$);return 0;}
	e:e '+' e{$$=$1+$3;}
	|e '-' e{$$=$1-$3;}
	|e '*' e{$$=$1*$3;}
	|e '/' e{$$=$1/$3;}
	|'(' e ')' {$$=$2;}
	|NUM {$$=$1;}
	;
%%
int main()
{
	printf("Enter an expression:");
	yyparse();
	printf("\n valid expression");
}
int yyerror(char *S)
{
	printf("Invalid expression:"):
	exit(0);
}
